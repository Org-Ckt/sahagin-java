subMethodTable:
  methods:
  - name: "abstractMethod"
    argVariables: [arg]
    classKey: "*ExtendsPage"
    testDoc: 'Doc: abstractMethod: override: {arg}'
    key: "*ExtendsPage.abstractMethod*"
  - codeBody:
    - code: {original: super.overriddenMethod(arg);, type: unknown}
    name: "overriddenMethod"
    argVariables: [arg]
    classKey: "*ExtendsPage"
    testDoc: 'Doc: overriddenMethod: override: {arg}'
    key: "*ExtendsPage.overriddenMethod*"
  - name: "abstractMethod"
    argVariables: [arg]
    classKey: "*ExtendsPageBase"
    testDoc: 'Doc: abstractMethod: {arg}'
    key: "*ExtendsPageBase.abstractMethod*"
  - name: "finalMethod"
    argVariables: [arg]
    classKey: "*ExtendsPageBase"
    testDoc: 'Doc: finalMethod: {arg}'
    key: "*ExtendsPageBase.finalMethod*"
  - name: "testBaseMethod"
    argVariables: [arg]
    classKey: "*ExtendsTestBase"
    testDoc: 'Doc: testBaseMethod: {arg}'
    key: "*ExtendsTestBase.testBaseMethod*"
  - codeBody:
    - code: {original: super.testBaseMethod(arg);, type: unknown}
    name: "testBaseMethod"
    capture: stepIn
    argVariables: [arg]
    classKey: "*ExtendsTestMain"
    testDoc: 'Doc: testBaseMethod: override: {arg}'
    key: "*ExtendsTestMain.testBaseMethod*"
rootMethodTable:
  methods:
  - codeBody:
    - code:
        original: testBaseMethod("ABC");
        methodKey: "*ExtendsTestMain.testBaseMethod*"
        args:
        - {value: ABC, original: '"ABC"', type: string}
    - code: {original: ExtendsPage pageInstance=new ExtendsPage();, type: unknown}
    - code:
        original: pageInstance.abstractMethod(123);
        methodKey: "*ExtendsPage.abstractMethod*"
        thisInstance: {type: localVar, name: pageInstance}        
        args:
        - {original: '123', type: unknown}
    - code:
        original: pageInstance.finalMethod(null);
        methodKey: "*ExtendsPageBase.finalMethod*"
        thisInstance: {type: localVar, name: pageInstance}
        args:
        - {original: 'null', type: unknown}
    - code:
        original: pageInstance.overriddenMethod("YYY");
        methodKey: "*ExtendsPage.overriddenMethod*"
        thisInstance: {type: localVar, name: pageInstance}
        args:
        - {value: YYY, original: '"YYY"', type: string}
    - code: {original: ExtendsPageBase baseInstance=new ExtendsPage();, type: unknown}
    - code:
        original: baseInstance.abstractMethod(456);
        methodKey: "*ExtendsPageBase.abstractMethod*"
        thisInstance: {type: localVar, name: baseInstance}
        args:
        - {original: '456', type: unknown}
    - code:
        original: baseInstance.finalMethod("WWW");
        methodKey: "*ExtendsPageBase.finalMethod*"
        thisInstance: {type: localVar, name: baseInstance}
        args:
        - {value: WWW, original: '"WWW"', type: string}
    - code: {original: baseInstance.overriddenMethod("ZZZ");, type: unknown}
    name: "extendsTest"
    classKey: "*ExtendsTestMain"
    key: "*ExtendsTestMain.extendsTest*"
subClassTable:
  classes:
  - testDoc: 'Doc: ExtendsPage'
    type: page
    key: "*ExtendsPage"
    methodKeys: ["*ExtendsPage.overriddenMethod*", "*ExtendsPage.abstractMethod*"]
    qname: "*.ExtendsPage"
  - key: "*ExtendsPageBase"
    methodKeys: ["*ExtendsPageBase.abstractMethod*",
      "*ExtendsPageBase.finalMethod*"]
    qname: "*.ExtendsPageBase"
  - testDoc: 'Doc: ExtendsTestBase'
    key: "*ExtendsTestBase"
    methodKeys: ["*ExtendsTestBase.testBaseMethod*"]
    qname: "*.ExtendsTestBase"
rootClassTable:
  classes:
  - testDoc: 'Doc: ExtendsTestMain'
    key: "*ExtendsTestMain"
    methodKeys: ["*ExtendsTestMain.extendsTest*", "*ExtendsTestMain.testBaseMethod*"]
    qname: "*ExtendsTestMain"